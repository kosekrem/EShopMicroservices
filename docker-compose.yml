services:
  catalogdb:
    container_name: catalogdb
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=CatalogDb
    ports:
      - "5432:5432"
    volumes:
      - ./postgres_catalog:/var/lib/postgresql/data/
  
  basketdb:
    container_name: basketdb
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=BasketDb
    ports:
      - "5433:5432"
    volumes:
      - ./postgres_basket:/var/lib/postgresql/data/
  
  distributedcache:
    container_name: distributedcache
    image: redis
    restart: always
    ports:
      - "6379:6379"
    
  basket.api:
    image: basket.api
    container_name: basket.api
    build:
      dockerfile: Services/Basket/Basket.API/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORTS=8081
      - ConnectionStrings__Database=Server=basketdb;Port=5432;Database=BasketDb;User Id=postgres;Password=postgres;Include Error Detail=true
      - ConnectionStrings__Redis=distributedcache:6379
      - GrpcSettings__DiscountUrl=https://discount.grpc:8081      
      - ASPNETCORE_Kestrel__Certificates__Default__Password=ekrem
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
      - MessageBroker__Host=amqp://ecommerce-mq:5672
      - MessageBroker__UserName=guest
      - MessageBroker__Password=guest
    depends_on:
      - basketdb
      - distributedcache
      - discount.grpc
      - messagebroker
    ports:
      - "6001:8080"
      - "6061:8081"
    volumes:
      - ~/.aspnet/https:/https:ro
  
  catalog.api:
    image: catalog.api
    container_name: catalog.api
    build:
      dockerfile: Services/Catalog/Catalog.API/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORTS=8081
      - ConnectionStrings__Database=Server=catalogdb;Port=5432;Database=CatalogDb;User Id=postgres;Password=postgres;Include Error Detail=true
      - ASPNETCORE_Kestrel__Certificates__Default__Password=ekrem
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
    depends_on:
      - catalogdb
    ports:
      - "6000:8080"
      - "6060:8081"
    volumes:
      - ~/.aspnet/https:/https:ro
  
  discount.grpc:
    image: discount.grpc
    container_name: discount.grpc
    build:
      dockerfile: Services/Discount/Discount.Grpc/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORTS=8081
      - ConnectionStrings__Database=Data Source=discountdb
      - ASPNETCORE_Kestrel__Certificates__Default__Password=ekrem
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
    ports:
      - "6002:8080"
      - "6062:8081"
    volumes:
      - ~/.aspnet/https:/https:ro
    
  orderdb:
    container_name: orderdb
    platform: linux/amd64
    image: mcr.microsoft.com/mssql/server
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=SwN12345678
    restart: always
    ports:
      - "1433:1433"
  
  messagebroker:
    container_name: messagebroker
    hostname: ecommerce-mq
    image: rabbitmq:management
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
  
  ordering.api:
    image: ordering.api
    container_name: ordering.api
    build:
      dockerfile: Services/Ordering/Ordering.API/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORTS=8081
      - ASPNETCORE_Kestrel__Certificates__Default__Password=ekrem
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
      - ConnectionStrings__Database=Server=orderdb;Database=OrderDb;User Id=sa;Password=SwN12345678;Encrypt=False;TrustServerCertificate=True
      - MessageBroker__Host=amqp://ecommerce-mq:5672
      - MessageBroker__UserName=guest
      - MessageBroker__Password=guest
      - FeatureManagement__OrderFullfilment=false
    ports:
      - "6003:8080"
      - "6063:8081"
    volumes:
      - ~/.aspnet/https:/https:ro
  
  yarpapigateway:
    image: yarpapigateway
    container_name: yarpapigateway
    build:
      dockerfile: ApiGateways/YarpApiGateway/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORTS=8081
      - ASPNETCORE_Kestrel__Certificates__Default__Password=ekrem
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
    depends_on:
      - catalog.api
      - basket.api
      - ordering.api
    ports:
      - "6004:8080"
      - "6064:8081"
    volumes:
      - ~/.aspnet/https:/https:ro
  
  shopping.web:
    image: shopping.web
    container_name: shopping.web
    build:
      context: .
      dockerfile: WebApps/Shopping.Web/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORTS=8081
      - ASPNETCORE_Kestrel__Certificates__Default__Password=ekrem
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
      - ApiSettings__GatewayAddress=http://yarpapigateway:8080
    depends_on:
      - yarpapigateway
    ports:
      - "6005:8080"
      - "6065:8081"
    volumes:
      - ~/.aspnet/https:/https:ro

